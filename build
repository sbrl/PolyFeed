#!/usr/bin/env bash
# Make sure the current directory is the location of this script to simplify matters
cd "$(dirname $(readlink -f $0))";
################
### Settings ###
################

# The name of this project
project_name="PolyFeed";

# The path to the lantern build engine git submodule
lantern_path="./lantern-build-engine";

###
# Custom Settings
###

# Put any custom settings here.
build_output_folder="./dist";

###############################################################################

# Check out the lantern git submodule if needed
if [ ! -f "${lantern_path}/lantern.sh" ]; then git submodule update --init "${lantern_path}"; fi

source "${lantern_path}/lantern.sh";

if [[ "$#" -lt 1 ]]; then
	echo -e "${FBLE}${project_name}${RS} build script";
	echo -e "    by Starbeamrainbowlabs";
	echo -e "${LC}Powered by the lantern build engine, v${version}${RS}";
	echo -e "";
	echo -e "${CSECTION}Usage${RS}";
	echo -e "    ./build ${CTOKEN}{action}${RS} ${CTOKEN}{action}${RS} ${CTOKEN}{action}${RS} ...";
	echo -e "";
	echo -e "${CSECTION}Available actions${RS}";
	echo -e "    ${CACTION}setup${RS}  - Do initial setup";
	echo -e "    ${CACTION}ci${RS}     - Execute CI tasks";
	echo -e "";
	
	exit 1;
fi

###############################################################################

task_setup() {
	task_begin "Checking environment";
	
	check_command git true;
	check_command msbuild true;
	check_command nuget true;
	check_command fpm true;
	
	task_end 0;
	
	
	task_begin "Initialising submodules";
	execute git submodule update --init;
	task_end $?;
}

task_build() {
	task_begin "Building PolyFeed for release";
	execute nuget restore;
	execute msbuild /p:Configuration=Release;
	execute chmod -x PolyFeed/bin/Release/*;
	execute chmod +x PolyFeed/bin/Release/*.exe;
	task_end $?;
}

task_package() {
	task_begin "Packaging as .deb";
	
	task_end $?;
}

task_ci() {
	tasks_run setup build package;
}

###############################################################################

tasks_run $@;
